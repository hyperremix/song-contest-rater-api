service: song-contest-rater
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stage: dev
  environment:
    SONG_CONTEST_RATER_ACTS_TABLE: '${self:custom.tableNames.acts}-${opt:stage, self:provider.stage}'
    SONG_CONTEST_RATER_DYNAMODB_ENDPOINT: ${self:custom.endpoints.dynamodb}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: '*'

plugins:
  - serverless-bundle
  - serverless-dynamodb-local
  - serverless-offline

functions:
  create-act:
    handler: src/act/act-gateway.createAct
    events:
      - http:
          path: acts
          method: post
  list-acts:
    handler: src/act/act-gateway.listActs
    events:
      - http:
          path: acts
          method: get

custom:
  bundle:
    linting: false
  dynamodb:
    start:
      migrate: true
    stages:
      - local
  tableNames:
    acts: 'acts'
  endpoints:
    dynamodb: 'http://localhost:8000'

resources:
  Resources:
    artists:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.SONG_CONTEST_RATER_ACTS_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
